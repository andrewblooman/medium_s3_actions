name: Deploy to AWS Environments

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      manual_trigger:
        description: 'Manually trigger Terraform Apply'
        required: true

jobs:
  terraform-plan-test:
    name: Terraform Plan and Apply (Test)
    runs-on: ubuntu-latest
    env:
      AWS_REGION: 'eu-west-1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials for Test'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Plan for Test
        run: |
          cd terraform/envs/test
          terraform init
          terraform plan -out=tfplan

      - name: Save Terraform Plan
        run: |
         cd terraform/envs/test  
         terraform show -json tfplan > plan.tfplan.json

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-json-test
          path: terraform/envs/test/plan.tfplan.json

  checkov-scan-test:
    name: Checkov Scan (Test)
    runs-on: ubuntu-latest
    needs: terraform-plan-test
    steps:
      - name: Download Terraform plan artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan-json-test

      # Install Checkov
      - name: Install Checkov
        run: pip install checkov

      # Run Checkov scan on the downloaded Terraform plan JSON
      - name: Run Checkov scan
        run: checkov -f plan.tfplan.json || true

  terraform-apply-test:
    name: Terraform Apply (Test)
    runs-on: ubuntu-latest
    needs: checkov-scan-test
    if: github.event_name == 'workflow_dispatch'    
    env:
      AWS_REGION: 'eu-west-1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials for Test'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TEST }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply for Test
        run: |
          cd envs/test
          terraform apply --auto-approve

  terraform-plan-uat:
    name: Terraform Plan and Apply (UAT)
    runs-on: ubuntu-latest
    needs: terraform-apply-test
    env:
      AWS_REGION: 'eu-west-1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials for UAT'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_UAT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_UAT }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Plan for UAT
        run: |
          cd envs/uat
          terraform init
          terraform plan -out=tfplan

      - name: Save Terraform Plan
        run: terraform show -json tfplan > plan.tfplan.json

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-json-uat
          path: plan.tfplan.json

  checkov-scan-uat:
    name: Checkov Scan (UAT)
    runs-on: ubuntu-latest
    needs: terraform-plan-uat
    steps:
      - name: Download Terraform plan artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan-json-uat

      # Install Checkov
      - name: Install Checkov
        run: pip install checkov

      # Run Checkov scan on the downloaded Terraform plan JSON
      - name: Run Checkov scan
        run: checkov -f plan.tfplan.json || true

  terraform-apply-uat:
    name: Terraform Apply (UAT)
    runs-on: ubuntu-latest
    needs: checkov-scan-uat
    env:
      AWS_REGION: 'eu-west-1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials for UAT'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_UAT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_UAT }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply for UAT
        run: |
          cd envs/uat
          terraform apply --auto-approve

  terraform-plan-prod:
    name: Terraform Plan and Apply (Prod)
    runs-on: ubuntu-latest
    needs: terraform-apply-uat
    env:
      AWS_REGION: 'eu-west-1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials for Prod'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Plan for Prod
        run: |
          cd envs/prod
          terraform init
          terraform plan -out=tfplan

      - name: Save Terraform Plan
        run: terraform show -json tfplan > plan.tfplan.json

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan-json-prod
          path: plan.tfplan.json

  checkov-scan-prod:
    name: Checkov Scan (Prod)
    runs-on: ubuntu-latest
    needs: terraform-plan-prod
    steps:
      - name: Download Terraform plan artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan-json-prod

      # Install Checkov
      - name: Install Checkov
        run: pip install checkov

      # Run Checkov scan on the downloaded Terraform plan JSON
      - name: Run Checkov scan
        run: checkov -f plan.tfplan.json || true

  terraform-apply-prod:
    name: Terraform Apply (Prod)
    runs-on: ubuntu-latest
    needs: checkov-scan-prod
    env:
      AWS_REGION: 'eu-west-1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials for Prod'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Apply for Prod
        run: |
          cd envs/prod
          terraform apply --auto-approve
